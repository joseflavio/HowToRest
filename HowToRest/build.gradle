apply plugin: 'java'
apply plugin: 'war'
apply plugin: 'jetty'
apply plugin: 'eclipse-wtp'
apply plugin: "findbugs"


war {
    // webXml = file('src/web.xml')
}

jettyRun {
    reload = "automatic"
    scanIntervalSeconds = 1
}

eclipse {
    classpath {
        defaultOutputDir = file('build/classes/main')
        downloadSources = true
        downloadJavadoc = true
    }
}

repositories {
    mavenCentral()
}

dependencies {

    // Needed for gwtCompile and the javaCompile, it also includes the servlet-api
    providedCompile 'com.google.gwt:gwt-user:2.6.1'
    providedCompile 'com.google.gwt:gwt-dev:2.6.1'

    providedCompile "javax.servlet:servlet-api:2.5";
    runtime 'com.google.gwt:gwt-servlet:2.6.1'

    compile 'org.slf4j:slf4j-api:1.7.7'
    compile 'org.slf4j:slf4j-simple:1.7.7'
}

findbugs {

    toolVersion = "2.0.3"
    //toolVersion = "3.0.0-rc1"
    
    //sourceSets = [sourceSets.main]

    reportsDir = file("$project.buildDir/findbugsReports")
    effort = "max"
    reportLevel = "low"

    //ignoreFailures = true
    //visitors = ["FindSqlInjection", "SwitchFallthrough"]
    //omitVisitors = ["FindNonShortCircuit"]
    // includeFilter = file("$rootProject.projectDir/config/findbugs/includeFilter.xml")
    // excludeFilter = file("$rootProject.projectDir/config/findbugs/excludeFilter.xml")
}

tasks.withType(FindBugs) {
    reports {
        xml.enabled = false
        html.enabled = true
    }
 }

task deploy(type: Copy) {
    from war
    into "${webserverHome}"
}




task compileGwt (dependsOn: classes, type: JavaExec) {
    ext.buildDir = "${project.buildDir}/gwt"
    ext.extraDir = "${project.buildDir}/extra"
     
    inputs.source sourceSets.main.java.srcDirs
    inputs.dir sourceSets.main.output.resourcesDir
    outputs.dir buildDir
     
    // Workaround for incremental build (GRADLE-1483)
    outputs.upToDateSpec = new org.gradle.api.specs.AndSpec()
     
    doFirst {
        file(buildDir).mkdirs()
        //classpath.each { println it.name}
    }
     
    main = 'com.google.gwt.dev.Compiler'
     
    classpath {
        [
        sourceSets.main.java.srcDirs, // Java source
        sourceSets.main.output.resourcesDir, // Generated resources
        sourceSets.main.output.classesDir, // Generated classes
        sourceSets.main.compileClasspath, // Deps
        ]
    }
     
    args =
    [
        'example.gwt.HowToRest', // Your GWT module
        '-war', buildDir,
        '-logLevel', 'INFO',
        '-localWorkers', '2',
        '-compileReport',
        '-extra', extraDir,
        // '-draftCompile' // Speeds up compile with 25%
    ]
     
    maxHeapSize = '512M'
}
